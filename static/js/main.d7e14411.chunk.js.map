{"version":3,"sources":["Store/Reducers/assignmentReducer.js","Store/Actions/actionTypes.js","Store/Reducers/assignmentFormReducer.js","Store/Reducers/navReducer.js","Store/Reducers/studentReducer.js","Store/Reducers/index.js","Store/Store.js","Components/Layout/Wrapper.js","Components/InputForms/NewStudentForm.js","Components/Assignment/Display/AssignmentSteps.js","Components/Assignment/Display/AssignmentButton.js","Components/Assignment/AssignmentForm.js","Components/Assignment/GradesForm.js","Components/Assignment/CompleteForm.js","Components/Assignment/Display/AssignmentWrapper.js","Components/Prediction/Prediction.js","Components/Prediction/PredictionsLayout.js","Components/Layout/Home.js","App.js","serviceWorker.js","index.js"],"names":["initialState","assignment","students","assignmentReducer","state","action","type","payload","steps","grades","complete","currentStep","assignment_info","assignmentFormReducer","nav_state","disabled","navReducer","first_name","last_name","group","grade","studentReducer","first","last","newStudentsList","i","length","current","newGrades","newStudent","push","combineReducers","assignmentForm","nav","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Header","Layout","Content","Footer","connect","dispatch","setHome","setStudent","setTeacher","setAssignment","props","className","theme","mode","defaultSelectedKeys","style","lineHeight","Item","key","onClick","to","padding","background","minHeight","children","textAlign","addStudent","student","useState","firstName","setFirstName","lastName","setLastName","submitStudentHandler","e","preventDefault","studentObject","gutter","alignItems","span","title","bordered","onSubmit","event","prefix","color","placeholder","marginBottom","size","onChange","target","value","htmlType","Step","Steps","AssignmentSteps","status","icon","marginTop","active","data","changeToGrades","changeToComplete","Option","Select","assignmentName","setAssignmentName","tek","setTek","setActive","buttonHandler","paddingTop","paddingBottom","name","tek_choice","newName","prevAssignmentName","width","defaultValue","newValue","prevTekState","addGrade","setGrades","columns","dataIndex","render","row","index","id","changeGradeHandler","min","max","idx","newGrade","lookup","toString","prevGrades","newObject","source","Object","values","newEntry","submitHandler","dataSource","rowKey","pagination","resetAssignmentForm","resetAssignment","deactivateNav","activateNav","setNavAssignment","setNavHome","useEffect","marginLeft","Prediction","group1weight","group2weight","group3weight","group1sum","group2sum","group3sum","group1count","group2count","group3count","stat","Math","trunc","join","text","styles","buildStyles","textSize","pathColor","textColor","map","Homepage","margin","overflow","App","Store","path","component","AssignmentWrapper","NewStudentForm","PredictionsLayout","Home","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+SAEMA,EAAe,CACnBC,WAAY,KACZC,SAAU,IAyBGC,EAtBW,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC1D,OAAQA,EAAOC,MACb,ICTwB,eDUtB,OAAO,eACFF,EADL,CAEEF,SAAS,YAAKG,EAAOE,WAEzB,ICP0B,iBDQxB,OAAO,eACFH,EADL,CAEEH,WAAYI,EAAOE,UAEvB,IClBkC,yBDmBhC,MAAO,CACLN,WAAY,KACZC,SAAU,IAEd,QACE,OAAOE,IEvBPJ,EAAe,CACnBQ,MAAO,CACLP,WAAY,UACZQ,OAAQ,OACRC,SAAU,QAEZC,YAAa,aACbC,gBAAiB,MAsCJC,EAlCe,WAAmC,IAAlCT,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC9D,OAAQA,EAAOC,MACb,IDVmC,0BCWjC,MAAO,CACLE,MAAM,eACDJ,EAAMI,MADN,CAEHC,OAAQ,SACRC,SAAU,YAEZC,YAAa,YAEjB,IDpBiC,wBCqB/B,MAAO,CACLH,MAAM,eACDJ,EAAMI,MADN,CAEHP,WAAY,SACZQ,OAAQ,YAEVE,YAAa,UAEjB,ID3B4B,mBC4B1B,MAAO,CACLH,MAAO,CACLP,WAAY,UACZQ,OAAQ,OACRC,SAAU,QAEZC,YAAa,cAEjB,QACE,OAAOP,ICzCPJ,EAAe,CACnBc,UAAW,GACXC,UAAU,GAwCGC,EArCI,WAAmC,IAAlCZ,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACnD,OAAQA,EAAOC,MACb,IFCwB,eEAtB,OAAO,eACFF,EADL,CAEEU,UAAW,MAEf,IFDkC,yBEEhC,OAAO,eACFV,EADL,CAEEU,UAAW,MAEf,IFR+B,sBES7B,OAAO,eACFV,EADL,CAEEU,UAAW,MAEf,IFZ+B,sBEa7B,OAAO,eACFV,EADL,CAEEU,UAAW,MAEf,IFf0B,iBEgBxB,OAAO,eACFV,EADL,CAEEW,UAAU,IAEd,IFnBwB,eEoBtB,OAAO,eACFX,EADL,CAEEW,UAAU,IAEd,QACE,OAAOX,ICtCPJ,EAAe,CACnBE,SAAU,CACR,CACEe,WAAY,OACZC,UAAW,QACXT,OAAQ,CACN,CACEU,MAAO,KACPC,MAAO,IAET,CACED,MAAO,KACPC,MAAO,IAET,CACED,MAAO,KACPC,MAAO,MAIb,CACEH,WAAY,QACZC,UAAW,OACXT,OAAQ,CACN,CACEU,MAAO,KACPC,MAAO,IAET,CACED,MAAO,KACPC,MAAO,IAET,CACED,MAAO,KACPC,MAAO,MAIb,CACEH,WAAY,WACZC,UAAW,UACXT,OAAQ,CACN,CACEU,MAAO,KACPC,MAAO,IAET,CACED,MAAO,KACPC,MAAO,IAET,CACED,MAAO,KACPC,MAAO,QAkDFC,EA3CQ,WAAmC,IAAlCjB,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACvD,OAAQA,EAAOC,MACb,IH7CuB,cG8CrB,MAAO,CACLJ,SAAS,GAAD,mBACHE,EAAMF,UADH,CAEN,CACEe,WAAYZ,EAAOE,QAAQe,MAC3BJ,UAAWb,EAAOE,QAAQgB,KAC1Bd,OAAQ,OAIhB,IHvDqB,YGyDnB,IADA,IAAMe,EAAkB,GACfC,EAAI,EAAGA,EAAIrB,EAAMF,SAASwB,OAAQD,IAAK,CAC9C,IAAIE,EAAUvB,EAAMF,SAASuB,GAC7B,GACEE,EAAQV,aAAeZ,EAAOE,QAAQe,OACtCK,EAAQT,YAAcb,EAAOE,QAAQgB,KACrC,CACA,IAAMK,EAAS,sBACVD,EAAQlB,QADE,CAEb,CAAEU,MAAOd,EAAOE,QAAQY,MAAOC,MAAOf,EAAOE,QAAQa,SAEjDS,EAAa,CACjBZ,WAAYZ,EAAOE,QAAQe,MAC3BJ,UAAWb,EAAOE,QAAQgB,KAC1Bd,OAAQmB,GAEVJ,EAAgBM,KAAKD,QAErBL,EAAgBM,KAAKH,GAGzB,MAAO,CACLzB,SAAUsB,GAEd,QACE,OAAOpB,IC9FE2B,4BAAgB,CAC7B9B,WAAYE,EACZ6B,eAAgBnB,EAChBoB,IAAKjB,EACLd,SAAUmB,ICHNa,EAAa,CAACC,KAQLC,EANDC,sBACZC,EALmB,GAOnBC,8BAAoBC,kBAAe,WAAf,EAAmBN,K,kBCLjCO,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OAsEVC,eAVS,SAAAzC,GAAK,MAAK,CAChC6B,IAAK7B,EAAM6B,QAGc,SAAAa,GAAQ,MAAK,CACtCC,QAAS,kBAAMD,EAAS,CAAExC,KN9DA,kBM+D1B0C,WAAY,kBAAMF,EAAS,CAAExC,KN9DI,yBM+DjC2C,WAAY,kBAAMH,EAAS,CAAExC,KN9DI,yBM+DjC4C,cAAe,kBAAMJ,EAAS,CAAExC,KN9DI,+BMgEvBuC,EApEC,SAAAM,GACd,OACE,kBAAC,IAAD,CAAQC,UAAU,UAChB,kBAAC,EAAD,KACE,yBAAKA,UAAU,SACf,kBAAC,IAAD,CACEC,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAACJ,EAAMlB,IAAInB,WAChC0C,MAAO,CAAEC,WAAY,SAErB,kBAAC,IAAKC,KAAN,CACEC,IAAI,IACJC,QAAS,WACPT,EAAMJ,WAERhC,SAAUoC,EAAMlB,IAAIlB,UAEpB,kBAAC,IAAD,CAAM8C,GAAG,KAAT,SAEF,kBAAC,IAAKH,KAAN,CACEC,IAAI,IACJC,QAAS,WACPT,EAAMH,cAERjC,SAAUoC,EAAMlB,IAAIlB,UAEpB,kBAAC,IAAD,CAAM8C,GAAG,gBAAT,gBAEF,kBAAC,IAAKH,KAAN,CACEC,IAAI,IACJC,QAAS,WACPT,EAAMD,iBAERnC,SAAUoC,EAAMlB,IAAIlB,UAEpB,kBAAC,IAAD,CAAM8C,GAAG,mBAAT,mBAEF,kBAAC,IAAKH,KAAN,CAAWC,IAAI,IAAI5C,SAAUoC,EAAMlB,IAAIlB,UACrC,kBAAC,IAAD,CAAM8C,GAAG,gBAAT,uBAIN,kBAAC,EAAD,CAASL,MAAO,CAAEM,QAAS,WAMzB,yBAAKN,MAAO,CAAEO,WAAY,OAAQD,QAAS,GAAIE,UAAW,MACvDb,EAAMc,WAGX,kBAACrB,EAAD,CAAQY,MAAO,CAAEU,UAAW,WAA5B,yB,kEC4BSrB,eARS,SAAAzC,GAAK,MAAK,CAChCF,SAAUE,EAAMF,aAGS,SAAA4C,GAAQ,MAAK,CACtCqB,WAAY,SAAAC,GAAO,OACjBtB,EAAS,CAAExC,KPtEY,cOsEmBC,QAAS6D,QAExCvB,EApFQ,SAAAM,GAAU,IAAD,EACIkB,mBAAS,IADb,mBACvBC,EADuB,KACZC,EADY,OAEEF,mBAAS,IAFX,mBAEvBG,EAFuB,KAEbC,EAFa,KASxBC,EAAuB,SAAAC,GAC3BA,EAAEC,iBACF,IAAMC,EAAgB,CACpBvD,MAAOgD,EACP/C,KAAMiD,GAERrB,EAAMgB,WAAWU,GAVjBN,EAAa,IACbE,EAAY,KAad,OACE,kBAAC,IAAD,CAAKK,OAAQ,CAAC,EAAG,GAAIxE,KAAK,OAAOkD,MAAO,CAAEuB,WAAY,WACpD,kBAAC,IAAD,CAAKC,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,GACT,kBAAC,IAAD,CAAMC,MAAM,cAAcC,UAAQ,GAChC,kBAAC,IAAD,CACE9B,UAAU,aACV+B,SAAU,SAAAC,GAAK,OAAIV,EAAqBU,KAExC,kBAAC,IAAD,CACEC,OAAQ,kBAAC,IAAD,CAAM/E,KAAK,OAAOkD,MAAO,CAAE8B,MAAO,qBAC1CC,YAAY,aACZ/B,MAAO,CAAEgC,aAAc,QACvBC,KAAK,QACLC,SAAU,SAAAf,GACRJ,EAAaI,EAAEgB,OAAOC,QAExBA,MAAOtB,IAET,kBAAC,IAAD,CACEe,OAAQ,kBAAC,IAAD,CAAM/E,KAAK,OAAOkD,MAAO,CAAE8B,MAAO,qBAC1CC,YAAY,YACZ/B,MAAO,CAAEgC,aAAc,QACvBC,KAAK,QACLC,SAAU,SAAAf,GACRF,EAAYE,EAAEgB,OAAOC,QAEvBA,MAAOpB,IAEM,KAAdF,GAAiC,KAAbE,EACnB,kBAAC,IAAD,CACElE,KAAK,UACLuF,SAAS,SACTzC,UAAU,oBACVqC,KAAK,QACL1E,UAAQ,GALV,UAUA,kBAAC,IAAD,CACET,KAAK,UACLuF,SAAS,SACTzC,UAAU,oBACVqC,KAAK,SAJP,aAYR,kBAAC,IAAD,CAAKT,KAAM,Q,SC1ETc,EAASC,IAATD,KA0COE,EAxCS,SAAA7C,GACtB,OACE,kBAAC,IAAD,KACE,kBAAC2C,EAAD,CACEG,OAAQ9C,EAAM3C,MAAMP,WACpBgF,MAAM,aACNiB,KAC6B,WAA3B/C,EAAM3C,MAAMP,WACV,kBAAC,IAAD,CAAMK,KAAK,gBAEX,kBAAC,IAAD,CAAMA,KAAK,SAAS+C,MAAM,aAIhC,kBAACyC,EAAD,CACEG,OAAQ9C,EAAM3C,MAAMC,OACpBwE,MAAM,SACNiB,KACyB,WAAvB/C,EAAM3C,MAAMC,OACV,kBAAC,IAAD,CAAMH,KAAK,SAEX,kBAAC,IAAD,CAAMA,KAAK,OAAO+C,MAAM,aAI9B,kBAACyC,EAAD,CACEG,OAAQ9C,EAAM3C,MAAME,SACpBuE,MAAM,WACNiB,KAC2B,WAAzB/C,EAAM3C,MAAME,SACV,kBAAC,IAAD,CAAMJ,KAAK,WAEX,kBAAC,IAAD,CAAMA,KAAK,SAAS+C,MAAM,e,QCTvBR,eAJS,SAAAzC,GAAK,MAAK,CAChC4B,eAAgB5B,EAAM4B,kBAGTa,EAxBU,SAAAM,GACvB,OACE,kBAAC,WAAD,KACwC,eAArCA,EAAMnB,eAAerB,aACe,WAArCwC,EAAMnB,eAAerB,YACnB,kBAAC,IAAD,CACEL,KAAK,UACL8C,UAAU,oBACVqC,KAAK,QACLI,SAAS,SACTrC,MAAO,CAAE2C,UAAW,QACpBpF,UAAWoC,EAAMiD,QANnB,YAUE,SCqFKvD,eAbS,SAAAzC,GAAK,MAAK,CAChCH,WAAYG,EAAMH,WAClB+B,eAAgB5B,EAAM4B,mBAGG,SAAAc,GAAQ,MAAK,CACtCI,cAAe,SAAAmD,GAAI,OACjBvD,EAAS,CAAExC,KV3Fe,iBU2FmBC,QAAS8F,KACxDC,eAAgB,kBAAMxD,EAAS,CAAExC,KV/FE,2BUgGnCiG,iBAAkB,kBAChBzD,EAAS,CAAExC,KVhGwB,gCUmGxBuC,EA/FQ,SAAAM,GAAU,IACvBqD,EAAWC,IAAXD,OADsB,EAGcnC,mBAAS,IAHvB,mBAGvBqC,EAHuB,KAGPC,EAHO,OAIRtC,mBAAS,MAJD,mBAIvBuC,EAJuB,KAIlBC,EAJkB,OAKFxC,oBAAS,GALP,mBAKvB+B,EALuB,KAKfU,EALe,KAkBxBC,EAAgB,WAElBD,EADqB,KAAnBJ,GAAiC,KAARE,IAS/B,OACE,kBAAC,IAAD,CACE9B,OAAQ,CAAC,EAAG,GACZxE,KAAK,OACLkD,MAAO,CACLuB,WAAY,SACZiC,WAAY,OACZC,cAAe,SAGjB,kBAAC,IAAD,CAAKjC,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,GACT,kBAAC,IAAD,CAAMC,MAAM,iBAAiBC,UAAQ,GACnC,kBAAC,IAAD,CAAM9B,UAAU,aAAa+B,SAlCf,SAAAR,GACpBA,EAAEC,iBACF,IAAM3E,EAAa,CACjBkB,MAAO,IACP+F,KAAMR,EACNS,WAAYP,GAEdzD,EAAMD,cAAcjD,GACpBkD,EAAMmD,mBA2BE,kBAAC,IAAD,CACEjB,OACE,kBAAC,IAAD,CAAM/E,KAAK,SAASkD,MAAO,CAAE8B,MAAO,qBAEtCC,YAAY,kBACZ/B,MAAO,CAAEgC,aAAc,QACvBC,KAAK,QACLG,MAAOc,EACPhB,SAAU,SAAAf,GACRA,EAAEC,iBACF,IAAMwC,EAAUzC,EAAEgB,OAAOC,MACzBmB,IACAJ,GAAkB,SAAAU,GAAkB,OAAID,QAG5C,kBAAC,IAAD,CACE5D,MAAO,CAAE8D,MAAO,KAChB/B,YAAY,qBACZE,KAAK,QACL8B,aAAa,KACb7B,SAAU,SAAAE,GACR,IAAM4B,EAAW5B,EACjBmB,IACAF,GAAO,SAAAY,GAAY,OAAID,OAGzB,kBAAChB,EAAD,CAAQZ,MAAM,MAAd,WACA,kBAACY,EAAD,CAAQZ,MAAM,MAAd,WACA,kBAACY,EAAD,CAAQZ,MAAM,MAAd,YAEF,6BACA,kBAAC,EAAD,CAAkBQ,OAAQA,OAIhC,kBAAC,IAAD,CAAKpB,KAAM,Q,0BCuCFnC,eAZS,SAAAzC,GAAK,MAAK,CAChCH,WAAYG,EAAMH,WAClB+B,eAAgB5B,EAAM4B,eACtB9B,SAAUE,EAAMF,SAASA,aAGA,SAAA4C,GAAQ,MAAK,CACtCyD,iBAAkB,kBAChBzD,EAAS,CAAExC,KXpHwB,6BWqHrCoH,SAAU,SAAArB,GAAI,OAAIvD,EAAS,CAAExC,KXvGN,YWuGmCC,QAAS8F,QAGtDxD,EArHI,SAAAM,GAAU,IAAD,EACEkB,mBAAS,IADX,mBACnB5D,EADmB,KACXkH,EADW,KAGpBC,EAAU,CACd,CACE3C,MAAO,aACP4C,UAAW,aACXlE,IAAK,cAEP,CACEsB,MAAO,YACP4C,UAAW,YACXlE,IAAK,aAEP,CACEsB,MAAO,QACP4C,UAAW,QACXC,OAAQ,SAAClC,EAAOmC,EAAKC,GACnB,OACE,kBAAC,IAAD,CACEC,GAAID,EACJtC,SAAU,SAAAE,GAAK,OAAIsC,EAAmBtC,EAAOoC,IAC7CG,IAAK,EACLC,IAAK,IACLb,aAAc,KAIpB5D,IAAK,OAIHuE,EAAqB,SAACtC,EAAOyC,GAEjC,IAAMC,EAAW1C,EACX2C,EAASF,EAAIG,WACJ,KAAX/H,GACFkH,EAAU,YAAIxE,EAAMjD,WACpByH,GAAU,SAAAc,GACR,IAAMC,EAAYD,EAAWF,GAE7B,OADAG,EAAUtH,MAAQkH,EACX,eACFG,EADL,eAEGF,EAASG,QAIdf,GAAU,SAAAc,GACR,IAAMC,EAAYD,EAAWF,GAE7B,OADAG,EAAUtH,MAAQkH,EACX,eACFG,EADL,eAEGF,EAASG,QAyBZC,EAAM,YAAOxF,EAAMjD,UAEzB,OACE,6BACE,0BAAMiF,SAAU,SAAAR,GAAC,OAvBC,SAAAA,GACpBA,EAAEC,iBAIF,IAFA,IAAMhD,EAAYgH,OAAOC,OAAOpI,GAEvBgB,EAAI,EAAGA,EAAIG,EAAUF,OAAQD,IAAK,CACzC,IAAIE,EAAUC,EAAUH,GACpBqH,EAAW,CACbxH,MAAOK,EAAQV,WACfM,KAAMI,EAAQT,UACdE,MAAOO,EAAQP,MACfD,MAAOgC,EAAMlD,WAAWA,WAAWkH,YAGrChE,EAAMuE,SAASoB,GAEjB3F,EAAMoD,mBAOiBwC,CAAcpE,KAChCxB,EAAMjD,SACL,wBAAIsD,MAAO,CAAE2C,UAAW,SAAxB,sBACsBhD,EAAMlD,WAAWA,WAAWiH,MAGlD,kBAAC,IAAD,CAAM5G,KAAK,YAEZ6C,EAAMjD,WAAa,GAClB,kBAAC,IAAD,CACE8I,WAAYL,EACZf,QAASA,EACTqB,OAAO,KACPC,YAAY,IAGd,kBAAC,IAAD,CAAOF,WAAY,OAErB,kBAAC,EAAD,CAAkB5C,QAAQ,SChDnBvD,cAAQ,MAVI,SAAAC,GAAQ,MAAK,CACtCqG,oBAAqB,kBAAMrG,EAAS,CAAExC,KZ5CR,sBY6C9B8I,gBAAiB,kBAAMtG,EAAS,CAAExC,KZlDE,4BYmDpC+I,cAAe,kBAAMvG,EAAS,CAAExC,KZtCJ,oBYuC5BgJ,YAAa,kBAAMxG,EAAS,CAAExC,KZtCJ,kBYuC1BiJ,iBAAkB,kBAChBzG,EAAS,CAAExC,KZ1CuB,4BY2CpCkJ,WAAY,kBAAM1G,EAAS,CAAExC,KZ9CH,qBYiDbuC,EApDM,SAAAM,GAKnB,OAJAsG,qBAAU,WACRtG,EAAMkG,kBACL,CAAClG,IAGF,6BACE,gEACA,kBAAC,IAAD,CACE7C,KAAK,UACL8C,UAAU,oBACVqC,KAAK,QACLI,SAAS,SACTrC,MAAO,CAAE2C,UAAW,QACpBvC,QAAS,WACPT,EAAMmG,cACNnG,EAAMoG,mBACNpG,EAAMgG,sBACNhG,EAAMiG,oBAGR,kBAAC,IAAD,CAAMvF,GAAG,mBAAT,uBAEF,kBAAC,IAAD,CACEvD,KAAK,UACL8C,UAAU,oBACVqC,KAAK,QACLI,SAAS,SACTrC,MAAO,CAAE2C,UAAW,OAAQuD,WAAY,QACxC9F,QAAS,WACPT,EAAMmG,cACNnG,EAAMqG,aACNrG,EAAMgG,sBACNhG,EAAMiG,oBAGR,kBAAC,IAAD,CAAMvF,GAAG,KAAT,aCFOhB,eAVS,SAAAzC,GAAK,MAAK,CAChCH,WAAYG,EAAMH,WAClB+B,eAAgB5B,EAAM4B,mBAGG,SAAAc,GAAQ,MAAK,CACtCwD,eAAgB,kBAAMxD,EAAS,CAAExC,KbjCE,2BakCnCiG,iBAAkB,kBAChBzD,EAAS,CAAExC,KblCwB,gCaoCxBuC,EA7BW,SAAAM,GACxB,IAAIxB,EAAU,KAUd,OAPEA,EADuC,eAArCwB,EAAMnB,eAAerB,YACb,kBAAC,EAAD,MACoC,WAArCwC,EAAMnB,eAAerB,YACpB,kBAAC,EAAD,MAEA,kBAAC,EAAD,MAIV,6BACE,kBAAC,EAAD,CAAiBH,MAAO2C,EAAMnB,eAAexB,QAC5CmB,M,SCwCQgI,I,OA7DI,SAAAxG,GACjB,IAuBIyG,EAAcC,EAAcC,EAvB1B5C,EAAO,CAAC/D,EAAMiB,QAAQnD,WAAYkC,EAAMiB,QAAQlD,WAClD6I,EAAY,EACZC,EAAY,EACZC,EAAY,EAEZC,EAAc,EACdC,EAAc,EACdC,EAAc,EAElB,IAAK,IAAI3I,KAAK0B,EAAMiB,QAAQ3D,OAAQ,CAClC,IAAIkB,EAAUwB,EAAMiB,QAAQ3D,OAAOgB,GACb,OAAlBE,EAAQR,OACV4I,GAAapI,EAAQP,MACrB8I,GAAe,GACY,OAAlBvI,EAAQR,OACjB6I,GAAarI,EAAQP,MACrB+I,GAAe,IAEfF,GAAatI,EAAQP,MACrBgJ,GAAe,GAOjBR,EADkB,IAAhBM,EACcH,EAAYG,EAAe,GAE5B,EAIfL,EADkB,IAAhBM,EACcH,EAAYG,EAAe,KAE5B,EAIfL,EADkB,IAAhBM,EACcH,EAAYG,EAAe,KAE5B,EAGjB,IAAMC,EAAOC,KAAKC,MAAMX,EAAeC,EAAeC,GAEtD,OACE,kBAAC,IAAD,CAAM7E,MAAOiC,EAAKsD,KAAK,KAAMhH,MAAO,CAAEU,UAAW,WAC/C,kBAAC,IAAD,CACE0B,MAAOyE,EACPI,KAAI,UAAKJ,EAAL,KACJK,OAAQC,YAAY,CAClBC,SAAU,OACVC,UAAW,UACXC,UAAW,iBC/BNjI,gBAHS,SAAAzC,GAAK,MAAK,CAChCF,SAAUE,EAAMF,YAEH2C,EAvBW,SAAAM,GACxB,OACE,kBAAC,IAAD,CAAK2B,OAAQ,CAAC,GAAI,KACf3B,EAAMjD,WAAa,GAClBiD,EAAMjD,SAASA,SAAS6K,KAAI,SAAA3G,GAC1B,OACE,yBAAKT,IAAKS,EAAQnD,YAChB,kBAAC,IAAD,CAAK+D,KAAM,GACT,kBAAC,GAAD,CAAYZ,QAASA,SAM7B,2CCoBO4G,GApCE,WAAO,IACdvI,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QAChB,OACE,6BACE,kBAACF,EAAD,CAAQe,MAAO,CAAEO,WAAY,OAAQD,QAAS,KAC9C,kBAACnB,EAAD,CAASa,MAAO,CAAEyH,OAAQ,cAAeC,SAAU,YACjD,yBAAK1H,MAAO,CAAEM,QAAS,GAAIC,WAAY,OAAQG,UAAW,WACxD,sDACA,6BACA,0HAIA,6BACA,kJAIA,6BACA,0IAIA,6BACA,wRCIKiH,OAnBf,WACE,OACE,kBAAC,IAAD,CAAU/I,MAAOgJ,GACf,kBAAC,IAAD,KACE,yBAAKhI,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiI,KAAK,kBAAkBC,UAAWC,IACzC,kBAAC,IAAD,CAAOF,KAAK,eAAeC,UAAWE,IACtC,kBAAC,IAAD,CAAOH,KAAK,eAAeC,UAAWG,KACtC,kBAAC,IAAD,CAAOJ,KAAK,IAAIC,UAAWI,WCVrBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASlE,OAAO,kBAAC,GAAD,MAASmE,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d7e14411.chunk.js","sourcesContent":["import * as actionTypes from \"../Actions/actionTypes\";\n\nconst initialState = {\n  assignment: null,\n  students: []\n};\n\nconst assignmentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_STUDENTS:\n      return {\n        ...state,\n        students: [...action.payload]\n      };\n    case actionTypes.SET_ASSIGNMENT:\n      return {\n        ...state,\n        assignment: action.payload\n      };\n    case actionTypes.RESET_ASSIGNMENT_STATE:\n      return {\n        assignment: null,\n        students: []\n      };\n    default:\n      return state;\n  }\n};\n\nexport default assignmentReducer;\n","export const GET_STUDENTS = \"GET_STUDENTS\";\nexport const RESET_ASSIGNMENT_STATE = \"RESET_ASSIGNMENT_STATE\";\n\n// Assignment Form State Actions\nexport const CHANGE_STEP_TO_GRADES = \"CHANGE_STEP_TO_GRADES\";\nexport const CHANGE_STEP_TO_COMPLETE = \"CHANGE_STEP_TO_COMPLETE\";\nexport const RESET_FORM_STATE = \"RESET_FORM_STATE\";\nexport const SET_ASSIGNMENT = \"SET_ASSIGNMENT\";\n\n//Nav State actions\nexport const SET_NAV_HOME = \"SET_NAV_HOME\";\nexport const SET_NAV_NEW_STUDENT = \"SET_NAV_NEW_STUDENT\";\nexport const SET_NAV_NEW_TEACHER = \"SET_NAV_NEW_TEACHER\";\nexport const SET_NAV_NEW_ASSIGNMENT = \"SET_NAV_NEW_ASSIGNMENT\";\nexport const DEACTIVATE_NAV = \"DEACTIVATE_NAV\";\nexport const ACTIVATE_NAV = \"ACTIVATE_NAV\";\n\n//Student Reducer actions\nexport const ADD_STUDENT = \"ADD_STUDENT\";\nexport const ADD_GRADE = \"ADD_GRADE\";\n","import * as actionTypes from \"../Actions/actionTypes\";\n\nconst initialState = {\n  steps: {\n    assignment: \"process\",\n    grades: \"wait\",\n    complete: \"wait\"\n  },\n  currentStep: \"assignment\",\n  assignment_info: null\n};\n\n\nconst assignmentFormReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_STEP_TO_COMPLETE:\n      return {\n        steps: {\n          ...state.steps,\n          grades: \"finish\",\n          complete: \"process\"\n        },\n        currentStep: \"complete\"\n      };\n    case actionTypes.CHANGE_STEP_TO_GRADES:\n      return {\n        steps: {\n          ...state.steps,\n          assignment: \"finish\",\n          grades: \"process\"\n        },\n        currentStep: \"grades\"\n      };\n    case actionTypes.RESET_FORM_STATE:\n      return {\n        steps: {\n          assignment: \"process\",\n          grades: \"wait\",\n          complete: \"wait\"\n        },\n        currentStep: \"assignment\"\n      };\n    default:\n      return state;\n  }\n};\n\nexport default assignmentFormReducer;\n","import * as actionTypes from \"../Actions/actionTypes\";\n\nconst initialState = {\n  nav_state: \"\",\n  disabled: false\n};\n\nconst navReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_NAV_HOME:\n      return {\n        ...state,\n        nav_state: \"1\"\n      };\n    case actionTypes.SET_NAV_NEW_ASSIGNMENT:\n      return {\n        ...state,\n        nav_state: \"4\"\n      };\n    case actionTypes.SET_NAV_NEW_STUDENT:\n      return {\n        ...state,\n        nav_state: \"2\"\n      };\n    case actionTypes.SET_NAV_NEW_TEACHER:\n      return {\n        ...state,\n        nav_state: \"3\"\n      };\n    case actionTypes.DEACTIVATE_NAV:\n      return {\n        ...state,\n        disabled: true\n      };\n    case actionTypes.ACTIVATE_NAV:\n      return {\n        ...state,\n        disabled: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default navReducer;\n","import * as actionTypes from \"../Actions/actionTypes\";\n\nconst initialState = {\n  students: [\n    {\n      first_name: \"Jack\",\n      last_name: \"Black\",\n      grades: [\n        {\n          group: \"g1\",\n          grade: 99\n        },\n        {\n          group: \"g3\",\n          grade: 67\n        },\n        {\n          group: \"g2\",\n          grade: 74\n        }\n      ]\n    },\n    {\n      first_name: \"Nolan\",\n      last_name: \"Ryan\",\n      grades: [\n        {\n          group: \"g1\",\n          grade: 79\n        },\n        {\n          group: \"g3\",\n          grade: 87\n        },\n        {\n          group: \"g2\",\n          grade: 94\n        }\n      ]\n    },\n    {\n      first_name: \"Leonardo\",\n      last_name: \"Davinci\",\n      grades: [\n        {\n          group: \"g1\",\n          grade: 59\n        },\n        {\n          group: \"g3\",\n          grade: 77\n        },\n        {\n          group: \"g2\",\n          grade: 84\n        }\n      ]\n    }\n  ]\n};\n\nconst studentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_STUDENT:\n      return {\n        students: [\n          ...state.students,\n          {\n            first_name: action.payload.first,\n            last_name: action.payload.last,\n            grades: []\n          }\n        ]\n      };\n    case actionTypes.ADD_GRADE:\n      const newStudentsList = [];\n      for (let i = 0; i < state.students.length; i++) {\n        let current = state.students[i];\n        if (\n          current.first_name === action.payload.first &&\n          current.last_name === action.payload.last\n        ) {\n          const newGrades = [\n            ...current.grades,\n            { group: action.payload.group, grade: action.payload.grade }\n          ];\n          const newStudent = {\n            first_name: action.payload.first,\n            last_name: action.payload.last,\n            grades: newGrades\n          };\n          newStudentsList.push(newStudent);\n        } else {\n          newStudentsList.push(current);\n        }\n      }\n      return {\n        students: newStudentsList\n      };\n    default:\n      return state;\n  }\n};\n\nexport default studentReducer;\n","import { combineReducers } from \"redux\";\nimport assignmentReducer from \"./assignmentReducer\";\nimport assignmentFormReducer from \"./assignmentFormReducer\";\nimport navReducer from \"./navReducer\";\nimport studentReducer from \"./studentReducer\";\n\nexport default combineReducers({\n  assignment: assignmentReducer,\n  assignmentForm: assignmentFormReducer,\n  nav: navReducer,\n  students: studentReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Reducers/\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport * as actionTypes from \"../../Store/Actions/actionTypes\";\n\nconst { Header, Content, Footer } = Layout;\n\nconst Wrapper = props => {\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <div className=\"logo\" />\n        <Menu\n          theme=\"dark\"\n          mode=\"horizontal\"\n          defaultSelectedKeys={[props.nav.nav_state]}\n          style={{ lineHeight: \"64px\" }}\n        >\n          <Menu.Item\n            key=\"1\"\n            onClick={() => {\n              props.setHome();\n            }}\n            disabled={props.nav.disabled}\n          >\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item\n            key=\"2\"\n            onClick={() => {\n              props.setStudent();\n            }}\n            disabled={props.nav.disabled}\n          >\n            <Link to=\"/new_student\">New Student</Link>\n          </Menu.Item>\n          <Menu.Item\n            key=\"3\"\n            onClick={() => {\n              props.setAssignment();\n            }}\n            disabled={props.nav.disabled}\n          >\n            <Link to=\"/new_assignment\">New Assignment</Link>\n          </Menu.Item>\n          <Menu.Item key=\"5\" disabled={props.nav.disabled}>\n            <Link to=\"/class_stats\">Class Statistics</Link>\n          </Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: \"0 50px\" }}>\n        {/* <Breadcrumb style={{ margin: \"16px 0\" }}>\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\n          <Breadcrumb.Item>List</Breadcrumb.Item>\n          <Breadcrumb.Item>App</Breadcrumb.Item>\n        </Breadcrumb> */}\n        <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n          {props.children}\n        </div>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>TekTrakker π</Footer>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = state => ({\n  nav: state.nav\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setHome: () => dispatch({ type: actionTypes.SET_NAV_HOME }),\n  setStudent: () => dispatch({ type: actionTypes.SET_NAV_NEW_STUDENT }),\n  setTeacher: () => dispatch({ type: actionTypes.SET_NAV_NEW_TEACHER }),\n  setAssignment: () => dispatch({ type: actionTypes.SET_NAV_NEW_ASSIGNMENT })\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Wrapper);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Form, Icon, Input, Button, Card } from \"antd\";\n\nimport * as actionTypes from \"../../Store/Actions/actionTypes\";\n\nconst NewStudentForm = props => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const resetState = () => {\n    setFirstName(\"\");\n    setLastName(\"\");\n  };\n\n  const submitStudentHandler = e => {\n    e.preventDefault();\n    const studentObject = {\n      first: firstName,\n      last: lastName\n    };\n    props.addStudent(studentObject);\n    resetState();\n  };\n\n  return (\n    <Row gutter={[8, 8]} type=\"flex\" style={{ alignItems: \"center\" }}>\n      <Col span={8}></Col>\n      <Col span={8}>\n        <Card title=\"New Student\" bordered>\n          <Form\n            className=\"login-form\"\n            onSubmit={event => submitStudentHandler(event)}\n          >\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"First Name\"\n              style={{ marginBottom: \"30px\" }}\n              size=\"large\"\n              onChange={e => {\n                setFirstName(e.target.value);\n              }}\n              value={firstName}\n            />\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"Last Name\"\n              style={{ marginBottom: \"30px\" }}\n              size=\"large\"\n              onChange={e => {\n                setLastName(e.target.value);\n              }}\n              value={lastName}\n            />\n            {firstName === \"\" || lastName === \"\" ? (\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                size=\"large\"\n                disabled\n              >\n                Submit\n              </Button>\n            ) : (\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            )}\n          </Form>\n        </Card>\n      </Col>\n      <Col span={8}></Col>\n    </Row>\n  );\n};\n\nconst mapStateToProps = state => ({\n  students: state.students\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addStudent: student =>\n    dispatch({ type: actionTypes.ADD_STUDENT, payload: student })\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(NewStudentForm);\n","import React from \"react\";\nimport { Steps, Icon } from \"antd\";\n\nconst { Step } = Steps;\n\nconst AssignmentSteps = props => {\n  return (\n    <Steps>\n      <Step\n        status={props.steps.assignment}\n        title=\"Assignment\"\n        icon={\n          props.steps.assignment !== \"finish\" ? (\n            <Icon type=\"folder-open\" />\n          ) : (\n            <Icon type=\"folder\" theme=\"filled\" />\n          )\n        }\n      />\n      <Step\n        status={props.steps.grades}\n        title=\"Grades\"\n        icon={\n          props.steps.grades !== \"finish\" ? (\n            <Icon type=\"file\" />\n          ) : (\n            <Icon type=\"file\" theme=\"filled\" />\n          )\n        }\n      />\n      <Step\n        status={props.steps.complete}\n        title=\"Complete\"\n        icon={\n          props.steps.complete !== \"finish\" ? (\n            <Icon type=\"folder\" />\n          ) : (\n            <Icon type=\"folder\" theme=\"filled\" />\n          )\n        }\n      />\n    </Steps>\n  );\n};\n\nexport default AssignmentSteps;\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"antd\";\n\nconst AssignmentButton = props => {\n  return (\n    <Fragment>\n      {props.assignmentForm.currentStep === \"assignment\" ||\n      props.assignmentForm.currentStep === \"grades\" ? (\n        <Button\n          type=\"primary\"\n          className=\"login-form-button\"\n          size=\"large\"\n          htmlType=\"submit\"\n          style={{ marginTop: \"25px\" }}\n          disabled={!props.active}\n        >\n          Continue\n        </Button>\n      ) : null}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => ({\n  assignmentForm: state.assignmentForm\n});\n\nexport default connect(mapStateToProps)(AssignmentButton);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Form, Icon, Input, Card, Select } from \"antd\";\n\nimport * as actionTypes from \"../../Store/Actions/actionTypes\";\n\n// Component Imports\nimport AssignmentButton from \"./Display/AssignmentButton\";\n\nconst AssignmentForm = props => {\n  const { Option } = Select;\n\n  const [assignmentName, setAssignmentName] = useState(\"\");\n  const [tek, setTek] = useState(\"g1\");\n  const [active, setActive] = useState(false);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const assignment = {\n      group: \"1\",\n      name: assignmentName,\n      tek_choice: tek\n    };\n    props.setAssignment(assignment);\n    props.changeToGrades();\n  };\n\n  const buttonHandler = () => {\n    if (assignmentName !== \"\" && tek !== \"\") {\n      setActive(true);\n    } else if (assignmentName !== \"\" || tek !== \"\") {\n      setActive(false);\n    } else {\n      setActive(false);\n    }\n  };\n\n  return (\n    <Row\n      gutter={[8, 8]}\n      type=\"flex\"\n      style={{\n        alignItems: \"center\",\n        paddingTop: \"30px\",\n        paddingBottom: \"30px\"\n      }}\n    >\n      <Col span={8}></Col>\n      <Col span={8}>\n        <Card title=\"New Assignment\" bordered>\n          <Form className=\"login-form\" onSubmit={submitHandler}>\n            <Input\n              prefix={\n                <Icon type=\"folder\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n              }\n              placeholder=\"Assignment Name\"\n              style={{ marginBottom: \"30px\" }}\n              size=\"large\"\n              value={assignmentName}\n              onChange={e => {\n                e.preventDefault();\n                const newName = e.target.value;\n                buttonHandler();\n                setAssignmentName(prevAssignmentName => newName);\n              }}\n            />\n            <Select\n              style={{ width: 200 }}\n              placeholder=\"Select a TEK Group\"\n              size=\"large\"\n              defaultValue=\"g1\"\n              onChange={value => {\n                const newValue = value;\n                buttonHandler();\n                setTek(prevTekState => newValue);\n              }}\n            >\n              <Option value=\"g1\">Group 1</Option>\n              <Option value=\"g2\">Group 2</Option>\n              <Option value=\"g3\">Group 3</Option>\n            </Select>\n            <br />\n            <AssignmentButton active={active} />\n          </Form>\n        </Card>\n      </Col>\n      <Col span={8}></Col>\n    </Row>\n  );\n};\n\nconst mapStateToProps = state => ({\n  assignment: state.assignment,\n  assignmentForm: state.assignmentForm\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setAssignment: data =>\n    dispatch({ type: actionTypes.SET_ASSIGNMENT, payload: data }),\n  changeToGrades: () => dispatch({ type: actionTypes.CHANGE_STEP_TO_GRADES }),\n  changeToComplete: () =>\n    dispatch({ type: actionTypes.CHANGE_STEP_TO_COMPLETE })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignmentForm);\n","import { connect } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport { Table, Icon, InputNumber } from \"antd\";\n\nimport * as actionTypes from \"../../Store/Actions/actionTypes\";\n\nimport AssignmentButton from \"./Display/AssignmentButton\";\n\nconst GradesForm = props => {\n  const [grades, setGrades] = useState(\"\");\n\n  const columns = [\n    {\n      title: \"First Name\",\n      dataIndex: \"first_name\",\n      key: \"first_name\"\n    },\n    {\n      title: \"Last Name\",\n      dataIndex: \"last_name\",\n      key: \"last_name\"\n    },\n    {\n      title: \"Grade\",\n      dataIndex: \"value\",\n      render: (value, row, index) => {\n        return (\n          <InputNumber\n            id={index}\n            onChange={value => changeGradeHandler(value, index)}\n            min={0}\n            max={100}\n            defaultValue={0}\n          />\n        );\n      },\n      key: \"id\"\n    }\n  ];\n\n  const changeGradeHandler = (value, idx) => {\n    // e.preventDefault();\n    const newGrade = value;\n    const lookup = idx.toString();\n    if (grades === \"\") {\n      setGrades([...props.students]);\n      setGrades(prevGrades => {\n        const newObject = prevGrades[lookup];\n        newObject.grade = newGrade;\n        return {\n          ...prevGrades,\n          [lookup]: newObject\n        };\n      });\n    } else {\n      setGrades(prevGrades => {\n        const newObject = prevGrades[lookup];\n        newObject.grade = newGrade;\n        return {\n          ...prevGrades,\n          [lookup]: newObject\n        };\n      });\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    // console.log(grades);\n    const newGrades = Object.values(grades);\n    // console.log(newGrades);\n    for (let i = 0; i < newGrades.length; i++) {\n      let current = newGrades[i];\n      let newEntry = {\n        first: current.first_name,\n        last: current.last_name,\n        grade: current.grade,\n        group: props.assignment.assignment.tek_choice\n      };\n      // console.log(newEntry);\n      props.addGrade(newEntry);\n    }\n    props.changeToComplete();\n  };\n\n  const source = [...props.students];\n\n  return (\n    <div>\n      <form onSubmit={e => submitHandler(e)}>\n        {props.students ? (\n          <h1 style={{ marginTop: \"15px\" }}>\n            Input Grades for : {props.assignment.assignment.name}\n          </h1>\n        ) : (\n          <Icon type=\"loading\" />\n        )}\n        {props.students !== [] ? (\n          <Table\n            dataSource={source}\n            columns={columns}\n            rowKey=\"id\"\n            pagination={false}\n          />\n        ) : (\n          <Table dataSource={null} />\n        )}\n        <AssignmentButton active={true} />\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  assignment: state.assignment,\n  assignmentForm: state.assignmentForm,\n  students: state.students.students\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeToComplete: () =>\n    dispatch({ type: actionTypes.CHANGE_STEP_TO_COMPLETE }),\n  addGrade: data => dispatch({ type: actionTypes.ADD_GRADE, payload: data })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GradesForm);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"antd\";\n\nimport * as actionTypes from \"../../Store/Actions/actionTypes\";\n\nconst CompleteForm = props => {\n  useEffect(() => {\n    props.deactivateNav();\n  }, [props]);\n\n  return (\n    <div>\n      <h1>Thank you for completing grades!</h1>\n      <Button\n        type=\"primary\"\n        className=\"login-form-button\"\n        size=\"large\"\n        htmlType=\"submit\"\n        style={{ marginTop: \"25px\" }}\n        onClick={() => {\n          props.activateNav();\n          props.setNavAssignment();\n          props.resetAssignmentForm();\n          props.resetAssignment();\n        }}\n      >\n        <Link to=\"/new_assignment\">Another Assignment</Link>\n      </Button>\n      <Button\n        type=\"primary\"\n        className=\"login-form-button\"\n        size=\"large\"\n        htmlType=\"submit\"\n        style={{ marginTop: \"25px\", marginLeft: \"30px\" }}\n        onClick={() => {\n          props.activateNav();\n          props.setNavHome();\n          props.resetAssignmentForm();\n          props.resetAssignment();\n        }}\n      >\n        <Link to=\"/\">Home</Link>\n      </Button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  resetAssignmentForm: () => dispatch({ type: actionTypes.RESET_FORM_STATE }),\n  resetAssignment: () => dispatch({ type: actionTypes.RESET_ASSIGNMENT_STATE }),\n  deactivateNav: () => dispatch({ type: actionTypes.DEACTIVATE_NAV }),\n  activateNav: () => dispatch({ type: actionTypes.ACTIVATE_NAV }),\n  setNavAssignment: () =>\n    dispatch({ type: actionTypes.SET_NAV_NEW_ASSIGNMENT }),\n  setNavHome: () => dispatch({ type: actionTypes.SET_NAV_HOME })\n});\n\nexport default connect(null, mapDispatchToProps)(CompleteForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\n//Redux imports\nimport * as actionTypes from \"../../../Store/Actions/actionTypes\";\n\n// Component Imports\nimport AssignmentSteps from \"./AssignmentSteps\";\nimport AssignmentForm from \"../AssignmentForm\";\nimport GradesForm from \"../GradesForm\";\nimport CompleteForm from \"../CompleteForm\";\n\nconst AssignmentWrapper = props => {\n  let current = null;\n\n  if (props.assignmentForm.currentStep === \"assignment\") {\n    current = <AssignmentForm />;\n  } else if (props.assignmentForm.currentStep === \"grades\") {\n    current = <GradesForm />;\n  } else {\n    current = <CompleteForm />;\n  }\n\n  return (\n    <div>\n      <AssignmentSteps steps={props.assignmentForm.steps} />\n      {current}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  assignment: state.assignment,\n  assignmentForm: state.assignmentForm\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeToGrades: () => dispatch({ type: actionTypes.CHANGE_STEP_TO_GRADES }),\n  changeToComplete: () =>\n    dispatch({ type: actionTypes.CHANGE_STEP_TO_COMPLETE })\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignmentWrapper);\n","import React from \"react\";\nimport { Card } from \"antd\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nconst Prediction = props => {\n  const name = [props.student.first_name, props.student.last_name];\n  let group1sum = 0;\n  let group2sum = 0;\n  let group3sum = 0;\n\n  let group1count = 0;\n  let group2count = 0;\n  let group3count = 0;\n\n  for (let i in props.student.grades) {\n    let current = props.student.grades[i];\n    if (current.group === \"g1\") {\n      group1sum += current.grade;\n      group1count += 1;\n    } else if (current.group === \"g2\") {\n      group2sum += current.grade;\n      group2count += 1;\n    } else {\n      group3sum += current.grade;\n      group3count += 1;\n    }\n  }\n\n  let group1weight, group2weight, group3weight;\n\n  if (group1count !== 0) {\n    group1weight = (group1sum / group1count) * 0.2;\n  } else {\n    group1weight = 0;\n  }\n\n  if (group2count !== 0) {\n    group2weight = (group2sum / group2count) * 0.425;\n  } else {\n    group2weight = 0;\n  }\n\n  if (group3count !== 0) {\n    group3weight = (group3sum / group3count) * 0.375;\n  } else {\n    group3weight = 0;\n  }\n\n  const stat = Math.trunc(group1weight + group2weight + group3weight);\n\n  return (\n    <Card title={name.join(\" \")} style={{ textAlign: \"center\" }}>\n      <CircularProgressbar\n        value={stat}\n        text={`${stat}%`}\n        styles={buildStyles({\n          textSize: \"14px\",\n          pathColor: \"#002766\",\n          textColor: \"#002766\"\n        })}\n      />\n    </Card>\n  );\n};\n\nexport default Prediction;\n","import React from \"react\";\nimport Prediction from \"./Prediction\";\nimport { Row, Col } from \"antd\";\nimport { connect } from \"react-redux\";\n\nconst PredictionsLayout = props => {\n  return (\n    <Row gutter={[16, 16]}>\n      {props.students !== [] ? (\n        props.students.students.map(student => {\n          return (\n            <div key={student.first_name}>\n              <Col span={4}>\n                <Prediction student={student} />\n              </Col>\n            </div>\n          );\n        })\n      ) : (\n        <h1>Loading</h1>\n      )}\n    </Row>\n  );\n};\n\nconst mapStateToProps = state => ({\n  students: state.students\n});\nexport default connect(mapStateToProps)(PredictionsLayout);\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nconst Homepage = () => {\n  const { Header, Content } = Layout;\n  return (\n    <div>\n      <Header style={{ background: \"#fff\", padding: 0 }} />\n      <Content style={{ margin: \"24px 16px 0\", overflow: \"initial\" }}>\n        <div style={{ padding: 24, background: \"#fff\", textAlign: \"center\" }}>\n          <h1>Welcome to Tek Trakker</h1>\n          <br />\n          <h2>\n            This demo of tek trakker is used to track performance for the 7th\n            grade English STAAR exam\n          </h2>\n          <br />\n          <h2>\n            There are 3 students with preloaded grades included in this demo, in\n            the New Student tab you can add more students\n          </h2>\n          <br />\n          <h2>\n            In the New Assignment Tabs you can add in grades and make another\n            assignment to include in the calculation\n          </h2>\n          <br />\n          <h2>\n            In the class statistics tab there will be data displayed showing the\n            predicted scores of the students based on the grades that have been\n            entered. All of the teks are divided into 3 different groups based\n            on their section and weight on the exam.\n          </h2>\n        </div>\n      </Content>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\n\nimport Store from \"./Store/Store\";\nimport Wrapper from \"./Components/Layout/Wrapper\";\nimport NewStudentForm from \"./Components/InputForms/NewStudentForm\";\nimport AssignmentWrapper from \"./Components/Assignment/Display/AssignmentWrapper\";\nimport PredictionsLayout from \"./Components/Prediction/PredictionsLayout\";\nimport Home from \"./Components/Layout/Home\";\n\nfunction App() {\n  return (\n    <Provider store={Store}>\n      <Router>\n        <div className=\"App\">\n          <Wrapper>\n            <Switch>\n              <Route path=\"/new_assignment\" component={AssignmentWrapper} />\n              <Route path=\"/new_student\" component={NewStudentForm} />\n              <Route path=\"/class_stats\" component={PredictionsLayout} />\n              <Route path=\"/\" component={Home} />\n            </Switch>\n          </Wrapper>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}